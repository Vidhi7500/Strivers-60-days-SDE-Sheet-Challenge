class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    
     static bool comparator(pair<int,int> p1, pair<int,int> p2){
        if(p1.second < p2.second)
            return true;
        else if(p1.second > p2.second)
            return false;
        else{
            if(p1.first > p2.first)
                return true;
            else
                return false;
        }
    }
    
    int maxMeetings(int start[], int end[], int n)
    {
        
        vector<pair<int,int>> meets;
        for(int i = 0; i < n; i++){
            meets.push_back({start[i],end[i]});
        }
       
        sort(meets.begin(), meets.end(), comparator);
        
       
        int count = 1;
        pair<int,int> last = meets[0]; 
        
        for(int i = 1; i < n; i++){
            
            if(meets[i].first > last.second){
                count++;
                last = meets[i];
            }
        }
        return count;
    }
};
